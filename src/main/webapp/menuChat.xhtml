<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core">
<h:head>

	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet"
		href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
		integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
		crossorigin="anonymous"></link>
	<!-- Optional theme -->
	<link rel="stylesheet"
		href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css"
		integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp"
		crossorigin="anonymous"></link>

	<!-- Latest compiled and minified JavaScript -->
	<script
		src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
		integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
		crossorigin="anonymous"></script>
		
<script type="text/javascript" src="#{request.contextPath}/static/js/modernizr.custom.js"></script>
<!--

//-->

<title>Chat</title>

</h:head>
<h:body>

<div id="vid-box" class="video2"></div>
	<div id="vid-thumb"></div>

	
	<div id="inCall" class="ptext">
		<button id="end" onclick="end()" >End</button> 
        <button id="mute" onclick="mute()">Mute</button> 
        <button id="pause" onclick="pause()">Pause</button>
        <button id="" onclick="">Déconnexion</button>
        
	</div>
	
    
	<div id="logs" class="ptext"></div>
	<p:growl id="growl" showDetail="true" />

	<h:form id="form">

		<p:remoteCommand name="updateList" update="users" process="@this" />

		<p:fieldset id="container" legend="PrimeChat" toggleable="true">

			<h:panelGroup rendered="#{chatView.loggedIn}">
			
			    <form name="loginForm" id="login" action="#" onsubmit="return errWrap(login,this);">
			        <span class="input input--nao" style="display:none">
			            <input class="input__field input__field--nao" type="text" name="username"  value="#{chatView.connectedUser.emailUtilisateur}" id="username" placeholder="Enter A Username"/>
			                <label class="input__label input__label--nao" for="username">
			                    <span class="input__label-content input__label-content--nao">                                          
			                    </span>
			                </label>
			                <svg class="graphic graphic--nao" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
			                    <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"/>
			                </svg>
			        </span>
			            
			        <button class="cbutton cbutton--effect-radomir" type="submit" name="login_submit" value="Log In" style="margin-top: 40px; margin-left:-10px">
			            <i class="cbutton__icon fa fa-fw fa fa-sign-in"></i>
			            Webcam
			        </button>
			    </form>
				<h:panelGrid columns="2" columnClasses="publicColumn,usersColumn"
					style="width:100%">
					<p:outputPanel id="public" layout="block"
						styleClass="ui-corner-all ui-widget-content chatlogs" />

					<p:dataList id="users" var="user" value="#{chatUsers.users}"
						styleClass="usersList">
						<f:facet name="header">
                        Les Utilisateurs
                    </f:facet>

						<p:commandButton title="Chat"  icon="ui-icon-comment"
							oncomplete="PF('pChat').show()"
							
							update=":form:privateChatContainer :form:mydatatable">
							<f:setPropertyActionListener value="#{user}"
								target="#{chatView.privateUser}" />
								 <f:ajax event="click"  listener="#{chatView.chargerLesDiscussion(user)}" render=":form:mydatatable" />
						</p:commandButton>
						
						  <form name="callForm" id="call" action="#" onsubmit="return errWrap(makeCall,this);">
						        <span class="input input--nao" style="display:none">
						            <input class="input__field input__field--nao" type="text" name="number" value="#{user}" id="call" placeholder="Enter User To Call!"/>
											<label class="input__label input__label--nao" for="number">
												<span class="input__label-content input__label-content--nao">                                          
						                        </span>
											</label>
										<svg class="graphic graphic--nao" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
										    <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"/>
										</svg>
						        </span>
						        <button class="cbutton cbutton--effect-radomir md-trigger" type="submit" value="Call" style="margin-top: 40px; margin-left:-10px" data-modal="modal-13">
						            <i class="cbutton__icon fa fa-fw fa fa fa-phone-square">Appel</i>
						        </button>
							</form>
                    #{user}
                </p:dataList>
				</h:panelGrid>

				<p:separator />

				<p:inputText value="#{chatView.globalMessage}"
					styleClass="messageInput" />
				<p:spacer width="5" />
				<p:commandButton value="Envoyer"
					actionListener="#{chatView.sendGlobal}"
					oncomplete="$('.messageInput').val('').focus()" />
				<p:spacer width="5" />
				<p:commandButton value="deconnexion"
					actionListener="#{chatView.disconnect}" global="false"
					update="container" />
			</h:panelGroup>

			<h:panelGroup rendered="#{not chatView.loggedIn}">
            Email: <p:inputText required="true" 
					value="#{chatView.username}" />
            
            Mot de passe: <p:password required="true"
					value="#{chatView.password}" />
				<p:spacer width="5" />
				<p:commandButton value="Login" actionListener="#{chatView.login}"
					update="container" icon="ui-icon-person" />
			</h:panelGroup>

		</p:fieldset>

		<p:dialog widgetVar="pChat" header="Private Chat" modal="true"
			showEffect="fade" hideEffect="fade">
			<h3 style="margin-top: 0">Messages</h3>
			<p:scrollPanel style="height:200px" id="mydatatable">
				    
				     <p:dataList value="#{chatView.lMsg}" var="ms" type="ordered">
				        <f:facet name="header">
				            Basic
				        </f:facet>
				         <p:panel id="basic" style="margin-bottom:5px">
				             #{ms.idEmeteur}
					        <h:panelGrid columns="1" cellpadding="10">
					            <h:outputText
					                value="#{ms.textMsg}" />
					        </h:panelGrid>
					    </p:panel>
					    <c:set var="result" value = "true"/>
				    </p:dataList>
			</p:scrollPanel>
			<h:panelGrid id="privateChatContainer" columns="2"
				columnClasses="vtop,vtop">
				<p:outputLabel for="pChatInput" value="à: #{chatView.privateUser}" />
				<p:inputTextarea id="pChatInput" value="#{chatView.privateMessage}"
					rows="5" cols="30" />

				<p:spacer />
				<p:commandButton value="Send"
					actionListener="#{chatView.sendPrivate}"
					oncomplete="PF('pChat').hide()" />
			</h:panelGrid>
		</p:dialog>

	</h:form>

	<p:socket onMessage="handleMessage" channel="/{room}"
		autoConnect="false" widgetVar="subscriber" />
		
		

<script src="https://cdn.pubnub.com/pubnub.min.js"></script>
<script type="text/javascript" src="#{request.contextPath}/static/js/webrtc.js"></script>
<script type="text/javascript" src="#{request.contextPath}/static/js/rtc-controller.js"></script>


	<script type="text/javascript">
		var ff = '{"text":" nbnbb {}","user":"jhhj","updateList":false}';
		var tr = JSON.parse(ff);
		console.log(tr);
		function handleMessage(message) {
			console.log(message);
			var chatContent = $(PrimeFaces.escapeClientId('form:public')), text = (message.user) ? message.user
					+ ':' + message.text
					: message.text;

			chatContent.append(text + '<br />');

			//keep scroll
			chatContent.scrollTop(chatContent.height());

			if (message.updateList) {
				updateList();
			}
		}
	</script>
	
	
<script type="text/javascript">

var video_out = document.getElementById("vid-box");
var vid_thumb = document.getElementById("vid-thumb");
var vidCount  = 0;
    
function login(form) {
	alert(form.username.value);
	var phone = window.phone = PHONE({
	    number        : form.username.value || "Anonymous", // listen on username line else Anonymous
	    publish_key   : 'pub-c-561a7378-fa06-4c50-a331-5c0056d0163c', // Your Pub Key
	    subscribe_key : 'sub-c-17b7db8a-3915-11e4-9868-02ee2ddab7fe', // Your Sub Key
	});
	var ctrl = window.ctrl = CONTROLLER(phone);
	ctrl.ready(function(){
		form.username.style.background="#55ff5b"; 
		form.login_submit.hidden="true"; 
		ctrl.addLocalStream(vid_thumb);
		addLog("Logged in as " + form.username.value); 
	});
	ctrl.receive(function(session){
	    session.connected(function(session){ video_out.appendChild(session.video); addLog(session.number + " has joined."); vidCount++; });
	    session.ended(function(session) { ctrl.getVideoElement(session.number).remove(); addLog(session.number + " has left.");    vidCount--;});
	});
	ctrl.videoToggled(function(session, isEnabled){
		ctrl.getVideoElement(session.number).toggle(isEnabled);
		addLog(session.number+": video enabled - " + isEnabled);
	});
	ctrl.audioToggled(function(session, isEnabled){
		ctrl.getVideoElement(session.number).css("opacity",isEnabled ? 1 : 0.75);
		addLog(session.number+": audio enabled - " + isEnabled);
	});

	return false;
}

function makeCall(form){
	if (!window.phone) alert("Login First!");
	var num = form.number.value;
	if (phone.number()==num) return false; // No calling yourself!
	ctrl.isOnline(num, function(isOn){
		if (isOn) ctrl.dial(num);
		else alert("User if Offline");
	});
	return false;
}

function mute(){
	var audio = ctrl.toggleAudio();
	if (!audio) $("#mute").html("Unmute");
	else $("#mute").html("Mute");
}

function end(){
	ctrl.hangup();
}

function pause(){
	var video = ctrl.toggleVideo();
	if (!video) $('#pause').html('Unpause'); 
	else $('#pause').html('Pause'); 
}

function getVideo(number){
	return $('*[data-number="'+number+'"]');
}

function addLog(log){
	$('#logs').append("<p>"+log+"</p>");
}

function errWrap(fxn, form){
	try {
		return fxn(form);
	} catch(err) {
		alert("WebRTC is currently only supported by Chrome, Opera, and Firefox");
		return false;
	}
}

</script>

<script>
	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new
		Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	ga('create', 'UA-46933211-3', 'auto');
	ga('send', 'pageview');

</script>

</h:body>
</html>